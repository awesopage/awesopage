datasource db {
  provider = "cockroachdb"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
  // Use a specific output path, based on https://github.com/prisma/prisma/issues/7661
  output = "../client"
}

enum RoleEnum {
  ADMIN
  REVIEWER

  @@map("app_role")
}

model User {
  id BigInt @id @default(autoincrement())
  email String @unique
  displayName String @map("display_name")
  roles RoleEnum[]
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")

  requestedLists List[] @relation("requested_lists")
  approvedLists List[] @relation("approved_lists")
  listStars ListStar[]
  resourceStars ResourceStar[]

  @@map("app_user")
}

enum ListStatusEnum {
  ACTIVE
  INACTIVE

  @@map("list_status")
}

model List {
  id BigInt @id @default(autoincrement())
  owner String
  repo String
  status ListStatusEnum
  description String
  repoStarCount BigInt @map("repo_star_count")
  tags String[]
  requestedAt DateTime @map("requested_at")
  requestedById BigInt @map("requested_by_id")
  updatedAt DateTime @map("updated_at")
  isApproved Boolean
  approvedById BigInt? @map("approved_by_id")

  requestedBy User @relation("requested_lists", fields: [requestedById], references: [id])
  approvedBy User? @relation("approved_lists", fields: [approvedById], references: [id])
  resourceLinks ResourceLink[]
  stars ListStar[]

  @@unique([owner, repo])
  @@map("list")
}

model ListStar {
  id BigInt @id @default(autoincrement())
  listId BigInt @map("list_id")
  userId BigInt @map("user_id")
  createdAt DateTime @map("created_at")

  list List @relation(fields: [listId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([listId, userId])
  @@map("list_star")
}

enum ResourceTypeEnum {
  CODE
  VIDEO
  WEBSITE

  @@map("resource_type")
}

model Resource {
  id BigInt @id @default(autoincrement())
  url String @unique
  domain String
  type ResourceTypeEnum
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")

  links ResourceLink[]
  stars ResourceStar[]

  @@map("resource")
}

model ResourceLink {
  id BigInt @id @default(autoincrement())
  description String
  tags String[]
  resourceId BigInt @map("resource_id")
  listId BigInt @map("list_id")

  list List @relation(fields: [listId], references: [id])
  resource Resource @relation(fields: [resourceId], references: [id])

  @@map("resource_link")
}

model ResourceStar {
  id BigInt @id @default(autoincrement())
  resourceId BigInt @map("resource_id")
  userId BigInt @map("user_id")
  createdAt DateTime @map("created_at")

  resource Resource @relation(fields: [resourceId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([resourceId, userId])
  @@map("resource_star")
}
